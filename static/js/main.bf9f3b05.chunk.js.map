{"version":3,"sources":["logo.svg","redux/actionMethodes/types.js","redux/rootReducer.js","redux/reducer/user.js","redux/store.js","utiles/baseUrl.jsx","utiles/repository.js","animation/LoadingAnimation.js","pages/home.jsx","pages/login.jsx","redux/actionMethodes/User/index.js","routes/index.jsx","routes/loginRoutes.jsx","routes/MainApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["types","rootReducer","combineReducers","User","state","action","type","payload","persistConfig","key","storage","whitelist","persistReducer","middleWares","logger","store","createStore","applyMiddleware","perssistor","persistStore","api","create","baseURL","headers","Accept","repository","login","data","a","post","getData","city","get","LoadingAnimation","props","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","children","className","options","useStyles","makeStyles","root","width","borderRadius","boxShadow","marginRight","marginTop","media","height","textAlign","cardText","position","bottom","RenderCard","gradient","classes","Card","CardActionArea","CardMedia","style","background","title","main","temp","parseInt","CardContent","dt_txt","moment","format","DisplayingErrorMessagesSchema","Yup","shape","name","required","MyLogin","dispatch","useDispatch","login_now","datapost","initialValues","validationSchema","onSubmit","values","setSubmitting","errors","touched","getFieldProps","handleSubmit","id","TextField","label","variant","color","Button","onClick","indexRoutes","process","REACT_APP_BASEDIR","path","component","Login","loginRoutes","useSelector","x","Token","React","useState","dataMain","setdataMain","showAnimation","setshowAnimation","useEffect","then","status","console","log","_","take","list","paddingTop","paddingLeft","map","i","hist","createBrowserHistory","MainApp","user","history","basename","prop","App","persistor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf9f3b05.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const types={\n    signIn:'SIGN_IN',\n    logOut:'LOG_OUT',\n\n\n}","import {combineReducers} from \"redux\";\nimport * as User from './reducer/user';\nimport {persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nexport const rootReducer = combineReducers({\n  User:User.userReducer,\n});\n\nconst persistConfig={\n  key:'root',\n  storage,\n  whitelist:['User']\n}\n\nexport default persistReducer(persistConfig,rootReducer )\n\nexport function* rootSaga() {\n\n}\n","import {types} from '../actionMethodes/types';\n\n\nexport const userReducer = (state =null, action) => {\n    \n    if (action.type === types.signIn) {\n        return action.payload\n    }\n    else if (action.type === types.logOut)\n        return null;\n       \n    return state\n    }\n","import {createStore,applyMiddleware} from 'redux';\nimport {persistStore} from 'redux-persist';\nimport rootReducer from './rootReducer';\nimport logger from 'redux-logger';\nconst middleWares=[logger];\n\nexport const store=createStore(rootReducer,applyMiddleware(...middleWares));\nexport const perssistor=persistStore(store);\nconst myStore={store,perssistor}\nexport default myStore;\n","import { create } from 'apisauce'\nexport const api = create({\n    baseURL: 'http://api.openweathermap.org/data/2.5',\n    headers: { Accept: 'application/vnd.github.v3+json' ,'Content-Type':'application/json'},\n  })\n","import {api} from './baseUrl';\n\n  const login =async (data)=>{\n   return await api.post('/login',data) \n}\n  const getData =async (city)=>{\n   return await api.get('/forecast?q='+city+'&appid=150e865a5f9e3ce89b2f5c418d2fb1b8') \n}\n\nexport const repository= {\n   login,\n   getData\n}","import React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"./4795-weather-mist.json\";\r\n\r\nconst LoadingAnimation = (props) => {\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  return (\r\n    <div>\r\n      {props.children}\r\n      <div className=\"overlay-3248asu23n\">\r\n        <div className=\"loading-animation\">\r\n          <Lottie options={defaultOptions} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingAnimation;\r\n","import React from 'react';\r\nimport {LogOut } from '../redux/actionMethodes/User/index'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {repository} from '../utiles/repository'\r\nimport moment from 'moment'\r\nimport _ from 'lodash'\r\nimport LoadingAnimation from '../animation/LoadingAnimation'\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 200,\r\n    borderRadius:9,\r\n    boxShadow:'0px 9px 16px rgba(17, 17, 17, 0.08)',\r\n    marginRight:44,\r\n    marginTop: '8%'\r\n  },\r\n  media: {\r\n    height: 140,\r\n    textAlign:'left',\r\n  },\r\n  cardText:{\r\n      position:'relative',\r\n      bottom:0\r\n  },\r\n\r\n});\r\nconst RenderCard=({gradient,data})=>{\r\n    const classes = useStyles();\r\n\r\n    return  <Card className={classes.root}>\r\n    <CardActionArea>\r\n      <CardMedia\r\n        className={classes.media}\r\n        style={{background:gradient}}\r\n        title=\"Contemplative Reptile\"\r\n      >\r\n<p className=\"mx-card-para-stl\">{data&&data.main&&data.main.temp?parseInt(data.main.temp-273.15):\"\"}<span>&#176;</span></p>\r\n          </CardMedia>\r\n      <CardContent>\r\n        <p className=\"card-short-head\" >\r\n        {data&&data.dt_txt?moment(data.dt_txt).format(\"dddd\"):\"\"}\r\n        </p>\r\n        \r\n        <p className=\"date-heading\" >\r\n        {data&&data.dt_txt?moment(data.dt_txt).format(\"MMMM DD yyyy\"):\"\"}\r\n        </p>\r\n        \r\n         \r\n      </CardContent>\r\n    </CardActionArea>\r\n \r\n  </Card>\r\n}\r\nexport default ()=>{\r\n   const Token=useSelector(x=>x.Token);\r\n   const User=useSelector(x=>x.User);\r\n   const dispatch=useDispatch();\r\n   const [dataMain,setdataMain]=React.useState([]);\r\n   const [showAnimation,setshowAnimation]=React.useState(false);\r\n   React.useEffect(()=>{\r\n        (async()=>{\r\n            setshowAnimation(true)\r\n            const {data,status}= await repository.getData(User.city).then(x=>x).then(x=>x)\r\n                console.log(status)   \r\n                if(status==200)\r\n                {\r\n                    setdataMain(_.take(data.list,5));\r\n                    setshowAnimation(false)\r\n                }         \r\n                else\r\n                {\r\n                    setshowAnimation(false);\r\n                }\r\n        })()\r\n   },[])\r\n   return <div style={{paddingTop:'10%',paddingLeft:'5%'}} >\r\n      {showAnimation? <LoadingAnimation/>:\"\"}\r\n                                <h3 className=\"head-welcome\" style={{textAlign:'left'}}>Hi, {User.name}</h3>\r\n                                <p className=\"head-subtitle\" style={{textAlign:'left'}}> Weather forecast: {User.city} for the next 5 days</p>\r\n\r\n            <div>\r\n            <div className=\"card-main\">\r\n            \r\n                {\r\n                    dataMain.map((x,i)=> <RenderCard key={i} data={x} gradient={i==0?'linear-gradient(114.44deg, #EB0055 0%, #F98820 100%)':i==1?\"linear-gradient(114.44deg, #EF33FF 0%, #AE15AF 80.3%, #9E0D9B 100%)\":i==2?\"linear-gradient(114.44deg, #624AF2 0%, #50DDC3 100%)\":i==3?\"linear-gradient(114.44deg, #5F2EEA 0%, #C8B5FF 100%)\":\"linear-gradient(114.44deg, #00E024 0%, #11C5A3 100%)\"}/>)\r\n                }\r\n           \r\n\r\n            </div>\r\n            </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Bootstrap from 'react-bootstrap'\r\nimport * as Yup from 'yup';\r\nimport { repository } from '../utiles/repository';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Login } from '../redux/actionMethodes/User/index'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst DisplayingErrorMessagesSchema = Yup.object().shape({\r\n\r\n    name: Yup.string()\r\n        .required('Required'),\r\n    city: Yup.string()\r\n        .required('Required'),\r\n});\r\n\r\n\r\nconst MyLogin = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const login_now = async (datapost) => {\r\n\r\n        // remove these 2 line\r\n        dispatch(Login({ name: datapost.name, city: datapost.city }));\r\n\r\n\r\n    }\r\n\r\n    return <Formik\r\n        initialValues={{\r\n            name: '',\r\n            city: '',\r\n        }}\r\n        validationSchema={DisplayingErrorMessagesSchema}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n            await login_now(values)\r\n        }}\r\n    >\r\n        {({ errors, touched, getFieldProps, handleSubmit }) => {\r\n            // cstErrors = errors;\r\n\r\n            return (\r\n                <Form>\r\n\r\n\r\n\r\n                    <div id=\"login\">\r\n                        <h3 className=\"head-welcome\">Welcome</h3>\r\n                        <p className=\"head-subtitle\">Tell us about yourself</p>\r\n\r\n                        <div className=\"mt-c68\">\r\n                            <TextField {...getFieldProps(\"name\")} label=\"Your name\" variant=\"filled\" />\r\n                            {touched.name && errors.name && <div style={{ color: 'red', marginTop: 10 }}>{errors.name}</div>}\r\n\r\n                        </div>\r\n                        <div className=\"mt-c30\" >\r\n                            <TextField {...getFieldProps(\"city\")} label=\"Location\" variant=\"filled\" />\r\n                            {touched.city && errors.city && <div style={{ color: 'red', marginTop: 10 }}>{errors.city}</div>}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"mt-c30\">\r\n                            <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\r\n                                Continue\r\n</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Form>\r\n            )\r\n\r\n        }}\r\n    </Formik>\r\n\r\n}\r\nexport default MyLogin;","import {types} from '../types'\nexport const LogOut=()=>{\n    return { type: types.logOut, payload: null }    \n}\nexport const Login=(payload)=>{\n    return {type:types.signIn,payload:payload}\n}\n","import Home from '../pages/home';\nimport Login from '../pages/login';\nvar BASEDIR = process.env.REACT_APP_BASEDIR;\n//it is use when user is not log in\nvar indexRoutes = [\n    { path: \"/\", name: \"Login\", component: Login },\n  ];\n\n\nexport default indexRoutes;\n","import Home from '../pages/home';\n\nvar BASEDIR = process.env.REACT_APP_BASEDIR;\n\nvar loginRoutes = [\n    { path: \"/\", name: \"Home\", component: Home },\n];\n\n\nexport default loginRoutes;\n","import { createBrowserHistory } from 'history';\r\nimport indexRoutes from './index';\r\nimport loginRoutes from './loginRoutes';\r\nimport {useSelector} from 'react-redux';\r\nimport {useEffect} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\n  const hist = createBrowserHistory();\r\n\r\nconst MainApp= ()=>{\r\n    const user=useSelector(x=>x.User)\r\n    useEffect(()=>{\r\n        console.log(user,\"usefd\");\r\n    },[])\r\n\r\nreturn   <Router history={hist} basename={process.env.REACT_APP_BASEDIR}>\r\n    <Switch>\r\n        {user!=null?loginRoutes.map((prop,key) => {\r\n                //console.log(prop.path + prop.key);\r\n                return ( \r\n                    <Route\r\n                        path={prop.path}\r\n                        key={key}\r\n                        component={prop.component}\r\n                    />\r\n                );\r\n            }):\r\n            indexRoutes.map((prop,key) => {\r\n                //console.log(prop.path + prop.key);\r\n                return ( \r\n                    <Route\r\n                        path={prop.path}\r\n                        key={key}\r\n                        component={prop.component}\r\n                    />\r\n                );\r\n            })\r\n        }\r\n    </Switch>\r\n</Router>\r\n\r\n}\r\nexport default MainApp;","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport {store,perssistor} from './redux/store'\nimport Main from './routes/MainApp'\n\nfunction App() {\n  return (\n    <Provider store={ store}>\n    <PersistGate persistor={perssistor}>\n    <div className=\"App\">\n    {/* <Location onError={(error) => console.log(error)} ref={innerRef} /> */}\n        <Main/>\n   </div>\n   \n    </PersistGate>\n    </Provider>  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}